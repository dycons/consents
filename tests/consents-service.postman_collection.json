{
	"info": {
		"_postman_id": "2cf24f78-3867-4a59-8b2e-685dfbacbb28",
		"name": "consents-service",
		"description": "A prototype microservice that stores participant data-sharing consent, metadata that may be used to inform row-level data access decisions, with respect for contextual integrity.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST Participant + DefaultConsent",
			"item": [
				{
					"name": "success (2xx)",
					"item": [
						{
							"name": "Add a participant and their default consent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test that request succeeded",
											"pm.test(\"Successful POST request\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"// Test that Location header is present",
											"pm.test(\"Location header is present\", () => {",
											"    pm.response.to.have.header(\"Location\");",
											"});",
											"",
											"const responseData = pm.response.json();",
											"",
											"// Test that response schema is valid ",
											"const schema = {",
											"    \"study_identifier\": {\"type\": \"string\"}",
											"};",
											"pm.test('Response schema is valid', function() {",
											"    pm.expect(tv4.validate(responseData, schema)).to.be.true;",
											"});",
											"",
											"// Set the study_identfier param for subsequent requests",
											"pm.collectionVariables.set(\"study_identifier\", responseData.study_identifier);",
											"",
											"// Set the expected consents for subsequent requests",
											"const requestData = JSON.parse(request.data);",
											"switch(requestData.genetic_consent_style) {",
											"  case \"OO\":",
											"    pm.collectionVariables.set(\"expected_genetic_consent\", true);",
											"    break;",
											"  default:",
											"    pm.collectionVariables.set(\"expected_genetic_consent\", false);",
											"}",
											"switch(requestData.clinical_consent_style) {",
											"  case \"OO\":",
											"    pm.collectionVariables.set(\"expected_clinical_consent\", true);",
											"    break;",
											"  default:",
											"    pm.collectionVariables.set(\"expected_clinical_consent\", false);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"genetic_consent_style\": \"{{genetic_consent_style}}\",\n    \"clinical_consent_style\": \"{{clinical_consent_style}}\"\n}"
								},
								"url": {
									"raw": "{{scheme}}{{host}}{{base_path}}/participants",
									"host": [
										"{{scheme}}{{host}}{{base_path}}"
									],
									"path": [
										"participants"
									]
								}
							},
							"response": [
								{
									"name": "Forbidden to overwrite participant in post",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"genetic_consent_style\": \"SUF\",\n    \"clinical_consent_style\": \"SUF\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"participants"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
								},
								{
									"name": "Internal error - default consent not created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"genetic_consent_style\": \"SUF\",\n    \"clinical_consent_style\": \"SUF\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"participants"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
								},
								{
									"name": "New default consent created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"genetic_consent_style\": \"SUF\",\n    \"clinical_consent_style\": \"SUF\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"participants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "<url>",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"study_identifier\": \"<uuid>\",\n \"default_consent\": {\n  \"genetic_consent_style\": \"SUF\",\n  \"clinical_consent_style\": \"SUF\"\n }\n}"
								}
							]
						},
						{
							"name": "Add a participant with null consent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test that request succeeded",
											"pm.test(\"Successful POST request\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"// Test that Location header is present",
											"pm.test(\"Location header is present\", () => {",
											"    pm.response.to.have.header(\"Location\");",
											"});",
											"",
											"const responseData = pm.response.json();",
											"",
											"// Test that response schema is valid ",
											"const schema = {",
											"    \"study_identifier\": {\"type\": \"string\"}",
											"};",
											"pm.test('Response schema is valid', function() {",
											"    pm.expect(tv4.validate(responseData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{scheme}}{{host}}{{base_path}}/participants",
									"host": [
										"{{scheme}}{{host}}{{base_path}}"
									],
									"path": [
										"participants"
									]
								}
							},
							"response": [
								{
									"name": "New default consent created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"genetic_consent_style\": \"SUF\",\n    \"clinical_consent_style\": \"SUF\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"participants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "<url>",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"study_identifier\": \"<uuid>\",\n \"default_consent\": {\n  \"genetic_consent_style\": \"SUF\",\n  \"clinical_consent_style\": \"SUF\"\n }\n}"
								},
								{
									"name": "Forbidden to overwrite participant in post",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"genetic_consent_style\": \"SUF\",\n    \"clinical_consent_style\": \"SUF\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"participants"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
								},
								{
									"name": "Internal error - default consent not created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"genetic_consent_style\": \"SUF\",\n    \"clinical_consent_style\": \"SUF\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"participants"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "GET DefaultConsent",
			"item": [
				{
					"name": "success (2xx)",
					"item": [
						{
							"name": "Get participant's default consent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test that request succeeded",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const responseData = pm.response.json();",
											"",
											"// Test that response schema is valid ",
											"const schema = {",
											"    \"genetic_consent_style:\": {\"type\": \"string\"},",
											"    \"clinical_consent_style:\": {\"type\": \"string\"}",
											"};",
											"pm.test('Response schema is valid', function() {",
											"    pm.expect(tv4.validate(responseData, schema)).to.be.true;",
											"});",
											"",
											"// Test that response values equal the expected values",
											"pm.test(\"Response values satisfy expectations\", () => {",
											"    pm.expect(responseData.genetic_consent_style).to.eql(pm.iterationData.get(\"genetic_consent_style\"));",
											"    pm.expect(responseData.clinical_consent_style).to.eql(pm.iterationData.get(\"clinical_consent_style\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{scheme}}{{host}}{{base_path}}/participants/{{study_identifier}}/default_consents",
									"host": [
										"{{scheme}}{{host}}{{base_path}}"
									],
									"path": [
										"participants",
										"{{study_identifier}}",
										"default_consents"
									]
								}
							},
							"response": [
								{
									"name": "Participant not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/participants/:study_identifier/default_consents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"participants",
												":study_identifier",
												"default_consents"
											],
											"variable": [
												{
													"key": "study_identifier"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
								},
								{
									"name": "Return default consent",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/participants/:study_identifier/default_consents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"participants",
												":study_identifier",
												"default_consents"
											],
											"variable": [
												{
													"key": "study_identifier"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"genetic_consent_style\": \"SUF\",\n \"clinical_consent_style\": \"SUF\"\n}"
								},
								{
									"name": "Internal error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/participants/:study_identifier/default_consents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"participants",
												":study_identifier",
												"default_consents"
											],
											"variable": [
												{
													"key": "study_identifier"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "client error (4xx)",
					"item": [
						{
							"name": "Get default consent for nil participant",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test that request succeeded",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"const responseData = pm.response.json();",
											"",
											"// Test that response schema is valid ",
											"const schema = {",
											"    \"code:\": {\"type\": \"integer\"},",
											"    \"message:\": {\"type\": \"string\"}",
											"};",
											"pm.test('Error response schema is valid', function() {",
											"    pm.expect(tv4.validate(responseData, schema)).to.be.true;",
											"});",
											"",
											"// Test that response values equal the expected values",
											"pm.test(\"Error code is correct\", () => {",
											"    pm.expect(responseData.code).to.eql(404001);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{scheme}}{{host}}{{base_path}}/participants/00000010-0000-0000-0000-000000000000/default_consents",
									"host": [
										"{{scheme}}{{host}}{{base_path}}"
									],
									"path": [
										"participants",
										"00000010-0000-0000-0000-000000000000",
										"default_consents"
									]
								}
							},
							"response": [
								{
									"name": "Participant not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/participants/:study_identifier/default_consents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"participants",
												":study_identifier",
												"default_consents"
											],
											"variable": [
												{
													"key": "study_identifier"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
								},
								{
									"name": "Return default consent",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/participants/:study_identifier/default_consents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"participants",
												":study_identifier",
												"default_consents"
											],
											"variable": [
												{
													"key": "study_identifier"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"genetic_consent_style\": \"SUF\",\n \"clinical_consent_style\": \"SUF\"\n}"
								},
								{
									"name": "Internal error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/participants/:study_identifier/default_consents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"participants",
												":study_identifier",
												"default_consents"
											],
											"variable": [
												{
													"key": "study_identifier"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "project consents",
			"item": [
				{
					"name": "POST ProjectConsent / REMS Entitlement",
					"item": [
						{
							"name": "success",
							"item": [
								{
									"name": "Add REMS Entitlement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Test that request succeeded",
													"pm.test(\"Successful POST request\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"application\": {{project_application_id}},\n    \"resource\": \"{{study_identifier}}\"\n}"
										},
										"url": {
											"raw": "{{scheme}}{{host}}{{base_path}}/rems/add_entitlement",
											"host": [
												"{{scheme}}{{host}}{{base_path}}"
											],
											"path": [
												"rems",
												"add_entitlement"
											]
										}
									},
									"response": [
										{
											"name": "Project consent created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "\"<uuid>\""
												},
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Location",
													"value": "<url>",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "client error (4xx)",
							"item": [
								{
									"name": "Add REMS Entitlement for a nil participant",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Test that request succeeded",
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"const responseData = pm.response.json();",
													"",
													"// Test that response schema is valid ",
													"const schema = {",
													"    \"code:\": {\"type\": \"integer\"},",
													"    \"message:\": {\"type\": \"string\"}",
													"};",
													"pm.test('Error response schema is valid', function() {",
													"    pm.expect(tv4.validate(responseData, schema)).to.be.true;",
													"});",
													"",
													"// Test that response values equal the expected values",
													"pm.test(\"Error code is correct\", () => {",
													"    pm.expect(responseData.code).to.eql(404003);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"application\": {{project_application_id}},\n    \"resource\": \"00000000-0000-0000-0000-000000000000\"\n}"
										},
										"url": {
											"raw": "{{scheme}}{{host}}{{base_path}}/rems/add_entitlement",
											"host": [
												"{{scheme}}{{host}}{{base_path}}"
											],
											"path": [
												"rems",
												"add_entitlement"
											]
										}
									},
									"response": [
										{
											"name": "Project consent created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "\"<uuid>\""
												},
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Location",
													"value": "<url>",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "GET ProjectConsents",
					"item": [
						{
							"name": "pre-test requests",
							"item": [
								{
									"name": "Initialize additional project consent for a participant",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Test that request succeeded",
													"pm.test(\"Successful POST request\", function () {",
													"    pm.response.to.have.status(202);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"application\": 0,\n    \"resource\": \"{{study_identifier}}\"\n}"
										},
										"url": {
											"raw": "{{scheme}}{{host}}{{base_path}}/rems/add_entitlement",
											"host": [
												"{{scheme}}{{host}}{{base_path}}"
											],
											"path": [
												"rems",
												"add_entitlement"
											]
										},
										"description": "This request prefaces the GET tests, so that the GET all ProjectConsents test can retrieve multiple resources."
									},
									"response": [
										{
											"name": "Project consent created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "\"<uuid>\""
												},
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Location",
													"value": "<url>",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "success (2xx)",
							"item": [
								{
									"name": "Get all of the participant's project consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Test that request succeeded",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"const responseData = pm.response.json();",
													"",
													"// Test that response schema is valid ",
													"const schema = {",
													"    \"items\": {",
													"        \"project_application_id\": {\"type\": \"integer\"},",
													"        \"genetic_consent\": {\"type\": \"boolean\"},",
													"        \"clinical_consent\": {\"type\": \"boolean\"}",
													"    }",
													"};",
													"pm.test('Response schema is valid', function() {",
													"    pm.expect(tv4.validate(responseData, schema)).to.be.true;",
													"});",
													"",
													"// Test that two results are returned",
													"pm.test(\"Response contains exactly two results\", () => {",
													"    pm.expect(responseData).to.have.lengthOf(2);",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{scheme}}{{host}}{{base_path}}/participants/{{study_identifier}}/project_consents",
											"host": [
												"{{scheme}}{{host}}{{base_path}}"
											],
											"path": [
												"participants",
												"{{study_identifier}}",
												"project_consents"
											]
										}
									},
									"response": [
										{
											"name": "Return all affiliated project consents",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"application_id\": \"<uuid>\",\n \"genetic_consent\": false,\n \"clinical_consent\": false\n}"
										},
										{
											"name": "Internal error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										},
										{
											"name": "Participant not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Get one project consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Test that request succeeded",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"const responseData = pm.response.json();",
													"",
													"// Test that response schema is valid ",
													"const schema = {",
													"    \"items\": {",
													"        \"project_application_id\": {\"type\": \"integer\"},",
													"        \"genetic_consent\": {\"type\": \"boolean\"},",
													"        \"clinical_consent\": {\"type\": \"boolean\"}",
													"    }",
													"};",
													"pm.test('Response schema is valid', function() {",
													"    pm.expect(tv4.validate(responseData, schema)).to.be.true;",
													"});",
													"",
													"// Test that only one result is returned",
													"pm.test(\"Response contains exactly one result\", () => {",
													"    pm.expect(responseData).to.have.lengthOf(1);",
													"})",
													"",
													"// Test that response values equal the expected values",
													"pm.test(\"Response values satisfy expectations\", () => {",
													"    pm.expect(responseData[0].project_application_id).to.eql(Number(pm.iterationData.get(\"project_application_id\")));",
													"    pm.expect(responseData[0].genetic_consent).to.eql(Boolean(pm.collectionVariables.get(\"expected_genetic_consent\")));",
													"    pm.expect(responseData[0].clinical_consent).to.eql(Boolean(pm.collectionVariables.get(\"expected_clinical_consent\")));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{scheme}}{{host}}{{base_path}}/participants/{{study_identifier}}/project_consents?project_application_id={{project_application_id}}",
											"host": [
												"{{scheme}}{{host}}{{base_path}}"
											],
											"path": [
												"participants",
												"{{study_identifier}}",
												"project_consents"
											],
											"query": [
												{
													"key": "project_application_id",
													"value": "{{project_application_id}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Internal error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										},
										{
											"name": "Return all affiliated project consents",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"application_id\": \"<uuid>\",\n \"genetic_consent\": false,\n \"clinical_consent\": false\n}"
										},
										{
											"name": "Participant not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "client error (4xx)",
							"item": [
								{
									"name": "Get nil participant's project consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Test that request succeeded",
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"const responseData = pm.response.json();",
													"",
													"// Test that response schema is valid ",
													"const schema = {",
													"    \"code:\": {\"type\": \"integer\"},",
													"    \"message:\": {\"type\": \"string\"}",
													"};",
													"pm.test('Error response schema is valid', function() {",
													"    pm.expect(tv4.validate(responseData, schema)).to.be.true;",
													"});",
													"",
													"// Test that response values equal the expected values",
													"pm.test(\"Error code is correct\", () => {",
													"    pm.expect(responseData.code).to.eql(404002);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{scheme}}{{host}}{{base_path}}/participants/00000000-0000-0000-0000-000000000000/project_consents",
											"host": [
												"{{scheme}}{{host}}{{base_path}}"
											],
											"path": [
												"participants",
												"00000000-0000-0000-0000-000000000000",
												"project_consents"
											]
										}
									},
									"response": [
										{
											"name": "Return all affiliated project consents",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"application_id\": \"<uuid>\",\n \"genetic_consent\": false,\n \"clinical_consent\": false\n}"
										},
										{
											"name": "Internal error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										},
										{
											"name": "Participant not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Get project consent for unknown project",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Test that request succeeded",
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"const responseData = pm.response.json();",
													"",
													"// Test that response schema is valid ",
													"const schema = {",
													"    \"code:\": {\"type\": \"integer\"},",
													"    \"message:\": {\"type\": \"string\"}",
													"};",
													"pm.test('Error response schema is valid', function() {",
													"    pm.expect(tv4.validate(responseData, schema)).to.be.true;",
													"});",
													"",
													"// Test that response values equal the expected values",
													"pm.test(\"Error code is correct\", () => {",
													"    pm.expect(responseData.code).to.eql(404001);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{scheme}}{{host}}{{base_path}}/participants/{{study_identifier}}/project_consents?project_application_id=555555555",
											"host": [
												"{{scheme}}{{host}}{{base_path}}"
											],
											"path": [
												"participants",
												"{{study_identifier}}",
												"project_consents"
											],
											"query": [
												{
													"key": "project_application_id",
													"value": "555555555"
												}
											]
										}
									},
									"response": [
										{
											"name": "Participant not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										},
										{
											"name": "Internal error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										},
										{
											"name": "Return all affiliated project consents",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"application_id\": \"<uuid>\",\n \"genetic_consent\": false,\n \"clinical_consent\": false\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Duplicate a REMS Entitlement",
					"item": [
						{
							"name": "Duplicate a REMS Entitlement",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test that request succeeded",
											"pm.test(\"Successful POST request\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"application\": {{project_application_id}},\n    \"resource\": \"{{study_identifier}}\"\n}"
								},
								"url": {
									"raw": "{{scheme}}{{host}}{{base_path}}/rems/add_entitlement",
									"host": [
										"{{scheme}}{{host}}{{base_path}}"
									],
									"path": [
										"rems",
										"add_entitlement"
									]
								}
							},
							"response": [
								{
									"name": "Project consent created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"<uuid>\""
										},
										"url": {
											"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"participants",
												":study_identifier",
												"project_consents"
											],
											"variable": [
												{
													"key": "study_identifier"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Location",
											"value": "<url>",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Check that ProjectConsent was not duplicated",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test that request succeeded",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const responseData = pm.response.json();",
											"",
											"// Test that response schema is valid ",
											"const schema = {",
											"    \"items\": {",
											"        \"project_application_id\": {\"type\": \"integer\"},",
											"        \"genetic_consent\": {\"type\": \"boolean\"},",
											"        \"clinical_consent\": {\"type\": \"boolean\"}",
											"    }",
											"};",
											"pm.test('Response schema is valid', function() {",
											"    pm.expect(tv4.validate(responseData, schema)).to.be.true;",
											"});",
											"",
											"// Test that only one result is returned",
											"pm.test(\"Response contains exactly one result\", () => {",
											"    pm.expect(responseData).to.have.lengthOf(1);",
											"})",
											"",
											"// Test that response values equal the expected values",
											"pm.test(\"Response values satisfy expectations\", () => {",
											"    pm.expect(responseData[0].project_application_id).to.eql(Number(pm.iterationData.get(\"project_application_id\")));",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{scheme}}{{host}}{{base_path}}/participants/{{study_identifier}}/project_consents?project_application_id={{project_application_id}}",
									"host": [
										"{{scheme}}{{host}}{{base_path}}"
									],
									"path": [
										"participants",
										"{{study_identifier}}",
										"project_consents"
									],
									"query": [
										{
											"key": "project_application_id",
											"value": "{{project_application_id}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Return all affiliated project consents",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"participants",
												":study_identifier",
												"project_consents"
											],
											"variable": [
												{
													"key": "study_identifier"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"application_id\": \"<uuid>\",\n \"genetic_consent\": false,\n \"clinical_consent\": false\n}"
								},
								{
									"name": "Internal error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"participants",
												":study_identifier",
												"project_consents"
											],
											"variable": [
												{
													"key": "study_identifier"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
								},
								{
									"name": "Participant not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"participants",
												":study_identifier",
												"project_consents"
											],
											"variable": [
												{
													"key": "study_identifier"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "PUT ProjectConsent",
					"item": [
						{
							"name": "success (2xx)",
							"item": [
								{
									"name": "Update participant's project consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Test that request succeeded",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"const responseData = pm.response.json();",
													"",
													"// Test that response schema is valid ",
													"const schema = {",
													"    \"project_application_id\": {\"type\": \"integer\"},",
													"    \"genetic_consent\": {\"type\": \"boolean\"},",
													"    \"clinical_consent\": {\"type\": \"boolean\"}",
													"};",
													"pm.test('Response schema is valid', function() {",
													"    pm.expect(tv4.validate(responseData, schema)).to.be.true;",
													"});",
													"",
													"// Set the expected consents for this and subsequent requests",
													"const requestData = JSON.parse(request.data);",
													"pm.collectionVariables.set(\"expected_genetic_consent\", requestData.genetic_consent);",
													"pm.collectionVariables.set(\"expected_clinical_consent\", requestData.clinical_consent);",
													"",
													"// Test that response values equal the expected values",
													"pm.test(\"Response values satisfy expectations\", () => {",
													"    pm.expect(responseData.project_application_id).to.eql(Number(pm.iterationData.get(\"project_application_id\")));",
													"    pm.expect(responseData.genetic_consent).to.eql(Boolean(pm.collectionVariables.get(\"expected_genetic_consent\")));",
													"    pm.expect(responseData.clinical_consent).to.eql(Boolean(pm.collectionVariables.get(\"expected_clinical_consent\")));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"project_application_id\": {{project_application_id}},\n    \"genetic_consent\": {{genetic_consent}},\n    \"clinical_consent\": {{clinical_consent}}\n}"
										},
										"url": {
											"raw": "{{scheme}}{{host}}{{base_path}}/participants/{{study_identifier}}/project_consents",
											"host": [
												"{{scheme}}{{host}}{{base_path}}"
											],
											"path": [
												"participants",
												"{{study_identifier}}",
												"project_consents"
											]
										}
									},
									"response": [
										{
											"name": "Forbidden to post project consent; see /project_consents/initialize endpoint instead.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"application_id\": \"<uuid>\",\n    \"genetic_consent\": false,\n    \"clinical_consent\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										},
										{
											"name": "Participant not found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"application_id\": \"<uuid>\",\n    \"genetic_consent\": false,\n    \"clinical_consent\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										},
										{
											"name": "Internal error - project consent not created",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"application_id\": \"<uuid>\",\n    \"genetic_consent\": false,\n    \"clinical_consent\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										},
										{
											"name": "Project consent updated",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"application_id\": \"<uuid>\",\n    \"genetic_consent\": false,\n    \"clinical_consent\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Confirm successful PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Test that request succeeded",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"const responseData = pm.response.json();",
													"",
													"// Test that response schema is valid ",
													"const schema = {",
													"    \"items\": {",
													"        \"project_application_id\": {\"type\": \"integer\"},",
													"        \"genetic_consent\": {\"type\": \"boolean\"},",
													"        \"clinical_consent\": {\"type\": \"boolean\"}",
													"    }",
													"};",
													"pm.test('Response schema is valid', function() {",
													"    pm.expect(tv4.validate(responseData, schema)).to.be.true;",
													"});",
													"",
													"// Test that only one result is returned",
													"pm.test(\"Response contains exactly one result\", () => {",
													"    pm.expect(responseData).to.have.lengthOf(1);",
													"})",
													"",
													"// Test that response values equal the expected values",
													"pm.test(\"Response values satisfy expectations\", () => {",
													"    pm.expect(responseData[0].project_application_id).to.eql(Number(pm.iterationData.get(\"project_application_id\")));",
													"    pm.expect(responseData[0].genetic_consent).to.eql(Boolean(pm.collectionVariables.get(\"expected_genetic_consent\")));",
													"    pm.expect(responseData[0].clinical_consent).to.eql(Boolean(pm.collectionVariables.get(\"expected_clinical_consent\")));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{scheme}}{{host}}{{base_path}}/participants/{{study_identifier}}/project_consents?project_application_id={{project_application_id}}",
											"host": [
												"{{scheme}}{{host}}{{base_path}}"
											],
											"path": [
												"participants",
												"{{study_identifier}}",
												"project_consents"
											],
											"query": [
												{
													"key": "project_application_id",
													"value": "{{project_application_id}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Participant not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										},
										{
											"name": "Return all affiliated project consents",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"application_id\": \"<uuid>\",\n \"genetic_consent\": false,\n \"clinical_consent\": false\n}"
										},
										{
											"name": "Internal error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "client error (4xx)",
							"item": [
								{
									"name": "Update nil participant's project consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Test that request succeeded",
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"const responseData = pm.response.json();",
													"",
													"// Test that response schema is valid ",
													"const schema = {",
													"    \"code:\": {\"type\": \"integer\"},",
													"    \"message:\": {\"type\": \"string\"}",
													"};",
													"pm.test('Error response schema is valid', function() {",
													"    pm.expect(tv4.validate(responseData, schema)).to.be.true;",
													"});",
													"",
													"// Test that response values equal the expected values",
													"pm.test(\"Error code is correct\", () => {",
													"    pm.expect(responseData.code).to.eql(404001);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"project_application_id\": {{project_application_id}},\n    \"genetic_consent\": {{genetic_consent}},\n    \"clinical_consent\": {{clinical_consent}}\n}"
										},
										"url": {
											"raw": "{{scheme}}{{host}}{{base_path}}/participants/00000000-0000-0000-0000-000000000000/project_consents",
											"host": [
												"{{scheme}}{{host}}{{base_path}}"
											],
											"path": [
												"participants",
												"00000000-0000-0000-0000-000000000000",
												"project_consents"
											]
										}
									},
									"response": [
										{
											"name": "Internal error - project consent not created",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"application_id\": \"<uuid>\",\n    \"genetic_consent\": false,\n    \"clinical_consent\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										},
										{
											"name": "Forbidden to post project consent; see /project_consents/initialize endpoint instead.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"application_id\": \"<uuid>\",\n    \"genetic_consent\": false,\n    \"clinical_consent\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										},
										{
											"name": "Participant not found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"application_id\": \"<uuid>\",\n    \"genetic_consent\": false,\n    \"clinical_consent\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										},
										{
											"name": "Project consent updated",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"application_id\": \"<uuid>\",\n    \"genetic_consent\": false,\n    \"clinical_consent\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update project consent for unknown project",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Test that request succeeded",
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"const responseData = pm.response.json();",
													"",
													"// Test that response schema is valid ",
													"const schema = {",
													"    \"code:\": {\"type\": \"integer\"},",
													"    \"message:\": {\"type\": \"string\"}",
													"};",
													"pm.test('Error response schema is valid', function() {",
													"    pm.expect(tv4.validate(responseData, schema)).to.be.true;",
													"});",
													"",
													"// Test that response values equal the expected values",
													"pm.test(\"Error code is correct\", () => {",
													"    pm.expect(responseData.code).to.eql(404001);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"project_application_id\": 555555555,\n    \"genetic_consent\": {{genetic_consent}},\n    \"clinical_consent\": {{clinical_consent}}\n}"
										},
										"url": {
											"raw": "{{scheme}}{{host}}{{base_path}}/participants/{{study_identifier}}/project_consents",
											"host": [
												"{{scheme}}{{host}}{{base_path}}"
											],
											"path": [
												"participants",
												"{{study_identifier}}",
												"project_consents"
											]
										}
									},
									"response": [
										{
											"name": "Forbidden to post project consent; see /project_consents/initialize endpoint instead.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"application_id\": \"<uuid>\",\n    \"genetic_consent\": false,\n    \"clinical_consent\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										},
										{
											"name": "Project consent updated",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"application_id\": \"<uuid>\",\n    \"genetic_consent\": false,\n    \"clinical_consent\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal error - project consent not created",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"application_id\": \"<uuid>\",\n    \"genetic_consent\": false,\n    \"clinical_consent\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										},
										{
											"name": "Participant not found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"application_id\": \"<uuid>\",\n    \"genetic_consent\": false,\n    \"clinical_consent\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/participants/:study_identifier/project_consents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"participants",
														":study_identifier",
														"project_consents"
													],
													"variable": [
														{
															"key": "study_identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "scheme",
			"value": "http://"
		},
		{
			"key": "host",
			"value": "0.0.0.0:3001"
		},
		{
			"key": "base_path",
			"value": "/v0"
		},
		{
			"key": "study_identifier",
			"value": ""
		},
		{
			"key": "project_application_id",
			"value": "123"
		},
		{
			"key": "genetic_consent_style",
			"value": "SUF"
		},
		{
			"key": "clinical_consent_style",
			"value": "SUF"
		},
		{
			"key": "genetic_consent",
			"value": "false"
		},
		{
			"key": "clinical_consent",
			"value": "false"
		},
		{
			"key": "expected_genetic_consent",
			"value": "false"
		},
		{
			"key": "expected_clinical_consent",
			"value": "false"
		}
	]
}